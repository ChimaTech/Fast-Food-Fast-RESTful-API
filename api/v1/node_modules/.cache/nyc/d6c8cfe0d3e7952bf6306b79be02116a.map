{"version":3,"sources":["index.js"],"names":["router","express","Router","get","appController","getAllUsers","post","signInUser","signUpUser","getAllOrders","getOrder","placeOrder","put","updateOrderStatus"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAA4D;;;AAG5D;AACA;AACA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAGA;;;AAGA;AAZ+B;AAa/BF,OAAOG,GAAP,CAAW,eAAX,EAA4BC,sBAAcC,WAA1C,E,CAAwD;;AAExD;AACAL,OAAOM,IAAP,CAAY,kBAAZ,EAAgCF,sBAAcG,UAA9C,E,CAA2D;;AAE3D;AACAP,OAAOM,IAAP,CAAY,eAAZ,EAA6BF,sBAAcI,UAA3C,E,CAAwD;;AAExD;AACAR,OAAOG,GAAP,CAAW,gBAAX,EAA6BC,sBAAcK,YAA3C,E,CAA0D;;AAE1D;AACAT,OAAOG,GAAP,CAAW,oBAAX,EAAiCC,sBAAcM,QAA/C,E,CAA0D;;AAE1D;AACAV,OAAOM,IAAP,CAAY,gBAAZ,EAA8BF,sBAAcO,UAA5C,E,CAAyD;;AAEzD;AACAX,OAAOY,GAAP,CAAW,oBAAX,EAAiCR,sBAAcS,iBAA/C,E,CAAmE;;AAEnE;;kBAEeb,M","file":"index.js","sourceRoot":"C:/Users/Chibueze Chima/Desktop/Dcoder/Andela--Udacity/Andela/Andela-Tests/#Pre-Boot-Camp-Challenges/Fast-Food-Fast-RESTful-API/api/v1/routes","sourcesContent":["import express from 'express'; // Imports the `Express` module\r\nimport appController from '../appControllers/app-controls'; // Imports the `App Controls` module\r\n\r\n\r\n// Create a `route` Handler with express.Router(). This will act like the:\r\n// `app = express()` we have inside `app.js`, but now from the `route`\r\nconst router = express.Router();\r\n\r\n\r\n/*\r\nNOTE: HTTP methods (i.e. the endpoints) section ...begins\r\n*/\r\n// GET: get all users <endpoint: 1>\r\nrouter.get('/api/v1/users', appController.getAllUsers); // </endpoint: 1>\r\n\r\n// POST: post a user to sessionsDB (i.e SIGN IN a User using the email and password) <endpoint: 2>\r\nrouter.post('/api/v1/sessions', appController.signInUser); // </endpoint: 2>\r\n\r\n// POST: post an entry to the dataBase (i.e. SIGN UP a user) <endpoint: 3>\r\nrouter.post('/api/v1/users', appController.signUpUser); // </endpoint: 3>\r\n\r\n// GET: get all All Orders <endpoint: 4>\r\nrouter.get('/api/v1/orders', appController.getAllOrders); // </endpoint: 4>\r\n\r\n// GET: get a single order using the object's ID attribute (i.e the order's ID) <endpoint: 5>\r\nrouter.get('/api/v1/orders/:id', appController.getOrder); // </endpoint: 5>\r\n\r\n// POST: post an entry to the orders dataBase (i.e. place a new order) <endpoint: 6>\r\nrouter.post('/api/v1/orders', appController.placeOrder); // </endpoint: 6>\r\n\r\n// PUT: Update an entry in the dataBase (i.e Update the status of an order) <endpoint: 7>\r\nrouter.put('/api/v1/orders/:id', appController.updateOrderStatus); // </endpoint: 7>\r\n\r\n/* HTTP methods section ...ends */\r\n\r\nexport default router;\r\n"]}